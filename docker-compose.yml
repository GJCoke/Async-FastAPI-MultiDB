services:
  app:
    container_name: app
    image: app_image
    env_file:
      - .env

    build:
      context: .
      dockerfile: Dockerfile

    volumes:
      - ./:/src

    ports:
      - "16000:8006"

    depends_on:  # Make sure that app_mysql starts first by depending on it.
      - app_mysql
      - app_mongo

  app_mysql:  # mysql server
    container_name: app_mysql
    hostname: app_mysql
    image: mysql:9.0
    env_file:
      - .env

    volumes:
      - app_mysql_data:/var/lib/mysql
      - app_mysql_data_backups:/backups
      # - ./scripts/mysql:/scripts

    command:
      - --character-set-server=utf8mb4  # Set the database character set to utf8mb4.
      - --collation-server=utf8mb4_general_ci  # Set the collation to utf8mb4_general_ci.

    ports:
      - "33306:3306"

  app_mongo:  # mongodb server
    container_name: app_mongo
    hostname: app_mongo
    image: mongo:latest
    env_file:
      - .env

    volumes:
      - app_mongo_data:/var/lib/mongo

    command: mongod --auth

    ports:
      - "27018:27017"

  app_redis:  # redis config.
    image: redis:6.2-alpine
    hostname: app_redis
    container_name: app_redis

    env_file:
      - .env

    volumes:
      - app_redis_data:/var/lib/redis

    command:
      - 'redis-server'  # start redis server.
      - '--requirepass 123456'  # set redis password.

    ports:
      - "36379:6379"  # Map the host's port 36379 to the container's port 6379.

volumes:  # data persistence.
  app_mysql_data:
    driver: "local"

  app_mysql_data_backups:
    driver: "local"

  app_mongo_data:
    driver: "local"

  app_redis_data:
    driver: "local"

networks:
  default:
    external: true
    name: app_network  # network name.
